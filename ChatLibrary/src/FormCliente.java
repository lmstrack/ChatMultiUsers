
import java.io.File;
import java.io.FileInputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;


public class FormCliente extends javax.swing.JFrame implements Runnable{

    private String username;
    private final String server = "localhost";
    private final int port = 2222;
    private ArrayList<String> users = new ArrayList();
    private Boolean isConnected = false;
    Thread t;
    
    Socket s;
    private ObjectOutputStream out;
    DefaultListModel modelo = new DefaultListModel();  

    public String getServer() {
        return server;
    }

    public int getPort() {
        return port;
    }

    public Boolean getIsConnected() {
        return isConnected;
    }

    public void setIsConnected(Boolean isConnected) {
        this.isConnected = isConnected;
    }
   
    public FormCliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lb_username = new javax.swing.JLabel();
        tf_username = new javax.swing.JTextField();
        b_connect = new javax.swing.JButton();
        lb_usuarios = new javax.swing.JLabel();
        b_enviarMsg = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ta_chat = new javax.swing.JTextArea();
        tf_msg = new javax.swing.JTextField();
        b_disconnect = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tl_users = new JList(modelo);
        b_clear = new javax.swing.JButton();
        b_enviarArq = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lb_username.setText("Nome de Usuário :");

        tf_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_usernameActionPerformed(evt);
            }
        });

        b_connect.setText("Conectar");
        b_connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_connectActionPerformed(evt);
            }
        });

        lb_usuarios.setText("Usuários Online:");

        b_enviarMsg.setText("Enviar Mensagem");
        b_enviarMsg.setEnabled(false);
        b_enviarMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_enviarMsgActionPerformed(evt);
            }
        });

        ta_chat.setEditable(false);
        ta_chat.setColumns(20);
        ta_chat.setRows(5);
        jScrollPane2.setViewportView(ta_chat);

        b_disconnect.setText("Desconectar");
        b_disconnect.setEnabled(false);
        b_disconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_disconnectActionPerformed(evt);
            }
        });

        tl_users.setVisibleRowCount(15);
        jScrollPane3.setViewportView(tl_users);

        b_clear.setText("Limpar");
        b_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_clearActionPerformed(evt);
            }
        });

        b_enviarArq.setText("Enviar Arquivo");
        b_enviarArq.setEnabled(false);
        b_enviarArq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_enviarArqActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tf_msg, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b_enviarMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b_enviarArq, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_username, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lb_usuarios, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(b_clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tf_username)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(b_connect)
                                .addGap(18, 18, 18)
                                .addComponent(b_disconnect))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_username, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_username)
                    .addComponent(b_connect)
                    .addComponent(b_disconnect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lb_usuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_clear))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(b_enviarMsg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(b_enviarArq))
                    .addComponent(tf_msg))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_usernameActionPerformed

    }//GEN-LAST:event_tf_usernameActionPerformed
   
    private void b_connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_connectActionPerformed
        if (!isConnected){
            try {
                s = new Socket(server, port);
                username = tf_username.getText();
                MensagemInicial msgInicial = new MensagemInicial(username);
                
                out = new ObjectOutputStream(s.getOutputStream());
                out.writeObject(msgInicial);
                out.flush();
                
                t = new Thread(this);
                t.start(); 
                b_disconnect.setEnabled(true);
                b_enviarArq.setEnabled(true);
                b_enviarMsg.setEnabled(true);
            } catch (Exception e) {
                ta_chat.append("Erro ao conectar...\n");
            }
        }

    }//GEN-LAST:event_b_connectActionPerformed

    private void b_enviarMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_enviarMsgActionPerformed
        String destinatario = "";
        Mensagem m = null;
        destinatario = tl_users.getSelectedValue();
        if (destinatario != null){
            MensagemPrivada mp = new MensagemPrivada(tf_msg.getText(), username, destinatario);
            m = (Mensagem) mp;
        }else{
            MensagemPublica pm = new MensagemPublica(tf_msg.getText(), username);
            m = (Mensagem) pm;
        }
        try {
            out.writeObject(m);
            out.flush();
        } catch (Exception e) {
            ta_chat.append("Erro ao enviar mensagem...\n");
        }
        tf_msg.setText("");
        ta_chat.append(m.toString());
    }//GEN-LAST:event_b_enviarMsgActionPerformed

    private void b_disconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_disconnectActionPerformed
        MensagemDesconexao md = new MensagemDesconexao(this.username);
        try {
            out.writeObject(md);
            out.flush();
            b_enviarArq.setEnabled(false);
            b_enviarMsg.setEnabled(false);
            modelo.clear();
        } catch (Exception e) {
            ta_chat.append("Erro ao desconectar...\n");
        }
    }//GEN-LAST:event_b_disconnectActionPerformed

    private void b_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_clearActionPerformed
        tl_users.clearSelection();
    }//GEN-LAST:event_b_clearActionPerformed

    private void b_enviarArqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_enviarArqActionPerformed
        FileInputStream fis;
        File fileSelected = null;
        try {
            JFileChooser chooser = new JFileChooser();
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            chooser.setDialogTitle("Escolha o arquivo");

            if (chooser.showOpenDialog(this) == JFileChooser.OPEN_DIALOG) {
                fileSelected = chooser.getSelectedFile();
                byte[] bFile = new byte[(int) fileSelected.length()];
                fis = new FileInputStream(fileSelected);
                fis.read(bFile);
                fis.close();

                long kbSize = fileSelected.length() / 1024;

                MensagemArquivo arquivo = new MensagemArquivo(fileSelected.getName(), bFile, username, tl_users.getSelectedValue());
                out.writeObject(arquivo);
                out.flush();
            }
        } catch (Exception e) {
            ta_chat.append("Erro ao enviar arquivo...\n");
        }
        ta_chat.append(username + ": Arquivo \"" + fileSelected.getName() + "\" enviado.\n");
    }//GEN-LAST:event_b_enviarArqActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_clear;
    private javax.swing.JButton b_connect;
    private javax.swing.JButton b_disconnect;
    private javax.swing.JButton b_enviarArq;
    private javax.swing.JButton b_enviarMsg;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lb_username;
    private javax.swing.JLabel lb_usuarios;
    private javax.swing.JTextArea ta_chat;
    private javax.swing.JTextField tf_msg;
    private javax.swing.JTextField tf_username;
    private javax.swing.JList<String> tl_users;
    // End of variables declaration//GEN-END:variables

    public void disableConnectB(){
        b_connect.setEnabled(false);
        tf_username.setEditable(false);
    }
    
    public void enableConnectB(){
        b_connect.setEnabled(true);
        tf_username.setEditable(true);
        b_disconnect.setEnabled(false);
    }
    
    public void chatAppend(String s){
        ta_chat.append(s);
    }

    public void loadUsers(ArrayList<String> users){
        users.forEach( (user) -> { modelo.addElement(user); } );
    }
    
    void addUser(String username) {
        modelo.addElement(username);
    }
    
    public void removeUser(String s){
        modelo.removeElement(s);
    }

    @Override
    public void run() {
        try{
            ObjectInputStream in = new ObjectInputStream(s.getInputStream());
            Mensagem m;
            while(true){                
                m = (Mensagem)in.readObject();
                m.executar(this);
            }
        } catch (Exception e){
            ta_chat.append("Erro ao iniciar thread...\n");
        }
    }
}
